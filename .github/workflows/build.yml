name: Build Plugin(打包)

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 14
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '14'

      - name: Build and Package
        run: |
          ./gradlew buildPlugin

      - name: Check is Success
        run: |
          ls build/distributions/

      - name: Find Plugin Zip
        run: |
          cd build/distributions/
          echo "package_name=$(find *.zip)" >> $GITHUB_ENV
          echo "version_name=$(echo $(find *.zip) | sed 's/JsonBeanGenerator-//')" >> $GITHUB_ENV
          echo "build_time=$(date +"%Y-%m-%d")" >> $GITHUB_ENV
          cd ../../

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.package_name }}
          path: build/distributions/${{ env.package_name }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version_name }}
          release_name: v${{ env.version_name }}
          body: |
            1.修复一直的问题
            2.变更生成dart模型，如果是常规的简单类型，如int，bool，double，string，会定义成final，避免使用的时候，需要添加诸多判断是否为null
            3.生成模型更接近于格式化后的代码
            
            1.Fix persistent problems
            2.Change the generated dart model. If it is a regular simple type, such as int, bool, double, string, it will be defined as final. When using it, you need to add a lot of judgments to determine whether it is null.
            3.The generated model is closer to the formatted code

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/${{ env.package_name }}
          asset_name: "${{ env.package_name }}"
          asset_content_type: application/octet-stream
